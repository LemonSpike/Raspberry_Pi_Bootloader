# This is a list of toolchains that are supported on this board.
set_board_info target_install  {vc4-elf}

# Load the generic configuration for this board. This will define any
# routines needed to communicate with the board. (The vc4-teststub isn't a
# simulator, but it looks enough like one to fake it.)
load_generic_config "sim"

# Unset the slow_simulator flag; this simulator isn't slow.  (I haven't
# found documentation as to what constitutes a "slow" simulator and
# there's no reference to that variable in the GCC test-suite, but all
# tests I've found work.)
unset_board_info slow_simulator

# We don't use basic-sim.exp and setup_sim because the simulator, called
# "mmix", is external to the build tree.  If nobody set the simulator
# name, we set it to "mmix", so the rest of the framework works.  Let $SIM
# override.
set_board_info sim "do-rpirun"

# No default multilib options are needed for this board.
process_multilib_options ""

set_board_info is_simulator 1

# It isn't visible in the target triple, so we set it explicitly.  The
# *linked* format is currently mmo, but those cases where this matters we
# can deal with separately.
set_board_info obj_format "binary"   

# The compiler used to build for this board. This has *nothing* to do
# with what compiler is tested if we're testing gcc.
set_board_info compiler  "[find_gcc]"

# We only support newlib on this target. We assume that all multilib
# options have been specified before we get here.
set_board_info cflags  ""

# We put the stack in the code segment, so trampolines work; the mmix
# simulator does not allow code to be executed in the "normal" documented
# data and stack segments.  Use a somewhat magic number, so stack addresses
# are easily recognized when debugging.
set_board_info ldflags ""   

# No linker script needed - the simulator is the main environment for this
# target.
set_board_info ldscript "-T vc4-teststub.ld"

# Pass remaining options directly to simulator
set_board_info sim,options ""

# Return codes aren't supported by the simulator.
set_board_info needs_status_wrapper 1

# FIXME: Some gdb board variables are usually here.  I currently have
# no clue what to set them to, so I won't.
set_board_info gdb,nosignals 1

# The test stub will take a while to download each binary. This may need
# experimenting with! (See also the hard-wired timeout in the stub itself,
# currently set to 299 to be just below this one.)
set_board_info gcc,timeout 300

# Setting this makes several tests use smaller data structures. Size is
# arbitrary!
#set_board_info gcc,stack_size 16384
